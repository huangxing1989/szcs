//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.239
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.ComponentModel;
using System.Web;
using System.Web.SessionState;
using System.Xml;
using szcs.Util;
using System.Web.Caching;
using System.IO;

namespace szcs
{
	public class Global : System.Web.HttpApplication
	{
        private const string URL_MAP = @"\XML\map.xml";
        private const string URL_CLS = @"\XML\cls.xml";
        private const string URL_SVR = @"\XML\svr.xml";
        private System.Web.Caching.Cache Cache = null;
        private string XMLPath = string.Empty;

		protected virtual void Application_Start (Object sender, EventArgs e)
		{
            this.Cache = Context.Cache;
            this.XMLPath = Context.Server.MapPath(@"~");
            LoadCache("init",null, CacheItemRemovedReason.Expired);
           
		}
		
		protected virtual void Session_Start (Object sender, EventArgs e)
		{
		}
		
		protected virtual void Application_BeginRequest (Object sender, EventArgs e)
		{
		}
		
		protected virtual void Application_EndRequest (Object sender, EventArgs e)
		{
		}
		
		protected virtual void Application_AuthenticateRequest (Object sender, EventArgs e)
		{
		}
		
		protected virtual void Application_Error (Object sender, EventArgs e)
		{
		}
		
		protected virtual void Session_End (Object sender, EventArgs e)
		{
		}
		
		protected virtual void Application_End (Object sender, EventArgs e)
		{
		}

        private void LoadCache(string key,object val,CacheItemRemovedReason reason)
        {
            roop:
            try
            {
                XmlDocument doc = new XmlDocument();
                doc.Load(XMLPath + URL_MAP);
                this.Cache.Add("MAP", XML2JSON.ToJSON(doc.DocumentElement), new CacheDependency(XMLPath + URL_MAP), DateTime.MaxValue, TimeSpan.Zero, CacheItemPriority.Normal, new CacheItemRemovedCallback(LoadCache));
                doc.Load(XMLPath + URL_CLS);
                this.Cache.Add("CLS", XML2JSON.ToJSON(doc.DocumentElement), new CacheDependency(XMLPath + URL_CLS), DateTime.MaxValue, TimeSpan.Zero, CacheItemPriority.Normal, new CacheItemRemovedCallback(LoadCache));
                doc.Load(XMLPath + URL_SVR);

                //load oracle config
                XmlNode nd = doc.SelectSingleNode("SZCS/SERVER");
                string service = nd.SelectSingleNode("SERVICE").InnerText.Trim();
                string user = nd.SelectSingleNode("USERNAME").InnerText.Trim();
                string password = nd.SelectSingleNode("PASSWORD").InnerText.Trim();
                string str = "Data Source="+service+";User Id="+user+";Password="+password+";";
                this.Cache.Add("ORASTR",str,new CacheDependency(XMLPath + URL_SVR), DateTime.MaxValue, TimeSpan.Zero, CacheItemPriority.Normal, new CacheItemRemovedCallback(LoadCache));
                OraHelper.str = str;

                nd = doc.SelectSingleNode("SZCS/DIRECTORYS");
                string Vphypath = nd.SelectSingleNode("VIDEO/PHYPATH").InnerText.Trim();
                string Vwebpath = nd.SelectSingleNode("VIDEO/WEBPATH").InnerText.Trim();

                string Iphypath = nd.SelectSingleNode("IMAGE/PHYPATH").InnerText.Trim();
                string Iwebpath = nd.SelectSingleNode("IMAGE/WEBPATH").InnerText.Trim();

                string Sphypath = nd.SelectSingleNode("SNAPCACHE/PHYPATH").InnerText.Trim();
                string Swebpath = nd.SelectSingleNode("SNAPCACHE/WEBPATH").InnerText.Trim();

             
                this.Cache.Add("VIDEOPATH", Vphypath, new CacheDependency(XMLPath + URL_SVR), DateTime.MaxValue, TimeSpan.Zero, CacheItemPriority.Normal, new CacheItemRemovedCallback(LoadCache));
                this.Cache.Add("VIDEOURL", Vwebpath, new CacheDependency(XMLPath + URL_SVR), DateTime.MaxValue, TimeSpan.Zero, CacheItemPriority.Normal, new CacheItemRemovedCallback(LoadCache));
                this.Cache.Add("IMAGEPATH", Iphypath, new CacheDependency(XMLPath + URL_SVR), DateTime.MaxValue, TimeSpan.Zero, CacheItemPriority.Normal, new CacheItemRemovedCallback(LoadCache));
                this.Cache.Add("IMAGEURL", Iwebpath, new CacheDependency(XMLPath + URL_SVR), DateTime.MaxValue, TimeSpan.Zero, CacheItemPriority.Normal, new CacheItemRemovedCallback(LoadCache));
                this.Cache.Add("CACHEPATH", Sphypath, new CacheDependency(XMLPath + URL_SVR), DateTime.MaxValue, TimeSpan.Zero, CacheItemPriority.Normal, new CacheItemRemovedCallback(LoadCache));
                this.Cache.Add("CACHEURL", Swebpath, new CacheDependency(XMLPath + URL_SVR), DateTime.MaxValue, TimeSpan.Zero, CacheItemPriority.Normal, new CacheItemRemovedCallback(LoadCache));

            }
            catch (Exception ex)
            {
                System.Windows.Forms.Application.DoEvents();
                goto roop;
            }

        }
        
        

	}
}

