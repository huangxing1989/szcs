var T, baidu = T = baidu || {
    version: "1.5.2"
};
baidu.guid = "$BAIDU$";
baidu.$$ = window[baidu.guid] = window[baidu.guid] || {
    global: {}
};
baidu.ui = baidu.ui || {
    version: "1.3.9"
};
baidu.ui.getUI = function(c) {
    var c = c.split("-"),
    b = baidu.ui,
    a = c.length,
    d = 0;
    for (; d < a; d++) {
        b = b[c[d].charAt(0).toUpperCase() + c[d].slice(1)]
    }
    return b
};
baidu.lang = baidu.lang || {};
baidu.lang.isString = function(a) {
    return "[object String]" == Object.prototype.toString.call(a)
};
baidu.isString = baidu.lang.isString;
baidu.ui.create = function(b, a) {
    if (baidu.lang.isString(b)) {
        b = baidu.ui.getUI(b)
    }
    return new b(a)
};
baidu.dom = baidu.dom || {};
baidu.dom.g = function(a) {
    if (!a) {
        return null
    }
    if ("string" == typeof a || a instanceof String) {
        return document.getElementById(a)
    } else {
        if (a.nodeName && (a.nodeType == 1 || a.nodeType == 9)) {
            return a
        }
    }
    return null
};
baidu.g = baidu.G = baidu.dom.g;
baidu.lang.guid = function() {
    return "TANGRAM$" + baidu.$$._counter++
};
baidu.$$._counter = baidu.$$._counter || 1;
baidu.lang.Class = function() {
    this.guid = baidu.lang.guid(); !this.__decontrolled && (baidu.$$._instances[this.guid] = this)
};
baidu.$$._instances = baidu.$$._instances || {};
baidu.lang.Class.prototype.dispose = function() {
    delete baidu.$$._instances[this.guid];
    for (var a in this) {
        typeof this[a] != "function" && delete this[a]
    }
    this.disposed = true
};
baidu.lang.Class.prototype.toString = function() {
    return "[object " + (this.__type || this._className || "Object") + "]"
};
window.baiduInstance = function(a) {
    return baidu.$$._instances[a]
};
baidu.lang.Event = function(a, b) {
    this.type = a;
    this.returnValue = true;
    this.target = b || null;
    this.currentTarget = null
};
baidu.lang.Class.prototype.fire = baidu.lang.Class.prototype.dispatchEvent = function(e, a) {
    baidu.lang.isString(e) && (e = new baidu.lang.Event(e)); !this.__listeners && (this.__listeners = {});
    a = a || {};
    for (var c in a) {
        e[c] = a[c]
    }
    var c, g, d = this,
    b = d.__listeners,
    f = e.type;
    e.target = e.target || (e.currentTarget = d);
    f.indexOf("on") && (f = "on" + f);
    typeof d[f] == "function" && d[f].apply(d, arguments);
    if (typeof b[f] == "object") {
        for (c = 0, g = b[f].length; c < g; c++) {
            b[f][c] && b[f][c].apply(d, arguments)
        }
    }
    return e.returnValue
};
baidu.lang.Class.prototype.on = baidu.lang.Class.prototype.addEventListener = function(e, d, c) {
    if (typeof d != "function") {
        return
    } !this.__listeners && (this.__listeners = {});
    var b, a = this.__listeners;
    e.indexOf("on") && (e = "on" + e);
    typeof a[e] != "object" && (a[e] = []);
    for (b = a[e].length - 1; b >= 0; b--) {
        if (a[e][b] === d) {
            return d
        }
    }
    a[e].push(d);
    c && typeof c == "string" && (a[e][c] = d);
    return d
};
baidu.event = baidu.event || {};
baidu.event._listeners = baidu.event._listeners || [];
baidu.dom._g = function(a) {
    if (baidu.lang.isString(a)) {
        return document.getElementById(a)
    }
    return a
};
baidu._g = baidu.dom._g;
baidu.event.on = function(b, e, g) {
    e = e.replace(/^on/i, "");
    b = baidu.dom._g(b);
    var f = function(i) {
        g.call(b, i)
    },
    a = baidu.event._listeners,
    d = baidu.event._eventFilter,
    h,
    c = e;
    e = e.toLowerCase();
    if (d && d[e]) {
        h = d[e](b, e, f);
        c = h.type;
        f = h.listener
    }
    if (b.addEventListener) {
        b.addEventListener(c, f, false)
    } else {
        if (b.attachEvent) {
            b.attachEvent("on" + c, f)
        }
    }
    a[a.length] = [b, e, g, f, c];
    return b
};
baidu.on = baidu.event.on;
baidu.event.un = function(c, f, b) {
    c = baidu.dom._g(c);
    f = f.replace(/^on/i, "").toLowerCase();
    var i = baidu.event._listeners,
    d = i.length,
    e = !b,
    h, g, a;
    while (d--) {
        h = i[d];
        if (h[1] === f && h[0] === c && (e || h[2] === b)) {
            g = h[4];
            a = h[3];
            if (c.removeEventListener) {
                c.removeEventListener(g, a, false)
            } else {
                if (c.detachEvent) {
                    c.detachEvent("on" + g, a)
                }
            }
            i.splice(d, 1)
        }
    }
    return c
};
baidu.un = baidu.event.un;
baidu.ui.Base = {
    id: "",
    getId: function(a) {
        var c = this,
        b;
        b = "tangram-" + c.uiType + "--" + (c.id ? c.id : c.guid);
        return a ? b + "-" + a : b
    },
    getClass: function(b) {
        var d = this,
        c = d.classPrefix,
        a = d.skin;
        if (b) {
            c += "-" + b;
            a += "-" + b
        }
        if (d.skin) {
            c += " " + a
        }
        return c
    },
    getMain: function() {
        return baidu.g(this.mainId)
    },
    getBody: function() {
        return baidu.g(this.getId())
    },
    uiType: "",
    getCallRef: function() {
        return "window['$BAIDU$']._instances['" + this.guid + "']"
    },
    getCallString: function(d) {
        var c = 0,
        b = Array.prototype.slice.call(arguments, 1),
        a = b.length;
        for (; c < a; c++) {
            if (typeof b[c] == "string") {
                b[c] = "'" + b[c] + "'"
            }
        }
        return this.getCallRef() + "." + d + "(" + b.join(",") + ");"
    },
    on: function(a, b, c) {
        baidu.on(a, b, c);
        this.addEventListener("ondispose",
        function() {
            baidu.un(a, b, c)
        })
    },
    renderMain: function(b) {
        var d = this,
        c = 0,
        a;
        if (d.getMain()) {
            return
        }
        b = baidu.g(b);
        if (!b) {
            b = document.createElement("div");
            document.body.appendChild(b);
            b.style.position = "absolute";
            b.className = d.getClass("main")
        }
        if (!b.id) {
            b.id = d.getId("main")
        }
        d.mainId = b.id;
        b.setAttribute("data-guid", d.guid);
        return b
    },
    dispose: function() {
        this.dispatchEvent("dispose");
        baidu.lang.Class.prototype.dispose.call(this)
    }
};
baidu.object = baidu.object || {};
baidu.extend = baidu.object.extend = function(c, a) {
    for (var b in a) {
        if (a.hasOwnProperty(b)) {
            c[b] = a[b]
        }
    }
    return c
};
baidu.lang.isFunction = function(a) {
    return "[object Function]" == Object.prototype.toString.call(a)
};
baidu.ui.createUI = function(c, j) {
    j = j || {};
    var g = j.superClass || baidu.lang.Class,
    f = g == baidu.lang.Class ? 1 : 0,
    d,
    b,
    h = function(k, i) {
        var l = this;
        k = k || {};
        g.call(l, !f ? k : (k.guid || ""), true);
        baidu.object.extend(l, h.options);
        baidu.object.extend(l, k);
        l.classPrefix = l.classPrefix || "tangram-" + l.uiType.toLowerCase();
        for (d in baidu.ui.behavior) {
            if (typeof l[d] != "undefined" && l[d]) {
                baidu.object.extend(l, baidu.ui.behavior[d]);
                if (baidu.lang.isFunction(l[d])) {
                    l.addEventListener("onload",
                    function() {
                        baidu.ui.behavior[d].call(l[d].apply(l))
                    })
                } else {
                    baidu.ui.behavior[d].call(l)
                }
            }
        }
        c.apply(l, arguments);
        for (d = 0, b = h._addons.length; d < b; d++) {
            h._addons[d](l)
        }
        if (k.parent && l.setParent) {
            l.setParent(k.parent)
        }
        if (!i && k.autoRender) {
            l.render(k.element)
        }
    },
    a = function() { };
    a.prototype = g.prototype;
    var e = h.prototype = new a();
    for (d in baidu.ui.Base) {
        e[d] = baidu.ui.Base[d]
    }
    h.extend = function(i) {
        for (d in i) {
            h.prototype[d] = i[d]
        }
        return h
    };
    h._addons = [];
    h.register = function(i) {
        if (typeof i == "function") {
            h._addons.push(i)
        }
    };
    h.options = {};
    return h
};
baidu.string = baidu.string || {};
baidu.string.format = function(c, a) {
    c = String(c);
    var b = Array.prototype.slice.call(arguments, 1),
    d = Object.prototype.toString;
    if (b.length) {
        b = b.length == 1 ? (a !== null && (/\[object Array\]|\[object Object\]/.test(d.call(a))) ? a : b) : b;
        return c.replace(/#\{(.+?)\}/g,
        function(e, g) {
            var f = b[g];
            if ("[object Function]" == d.call(f)) {
                f = f(g)
            }
            return ("undefined" == typeof f ? "" : f)
        })
    }
    return c
};
baidu.format = baidu.string.format;
baidu.browser = baidu.browser || {};
baidu.browser.opera = /opera(\/| )(\d+(\.\d+)?)(.+?(version\/(\d+(\.\d+)?)))?/i.test(navigator.userAgent) ? +(RegExp["\x246"] || RegExp["\x242"]) : undefined;
baidu.dom.insertHTML = function(d, a, c) {
    d = baidu.dom.g(d);
    var b, e;
    if (d.insertAdjacentHTML && !baidu.browser.opera) {
        d.insertAdjacentHTML(a, c)
    } else {
        b = d.ownerDocument.createRange();
        a = a.toUpperCase();
        if (a == "AFTERBEGIN" || a == "BEFOREEND") {
            b.selectNodeContents(d);
            b.collapse(a == "AFTERBEGIN")
        } else {
            e = a == "BEFOREBEGIN";
            b[e ? "setStartBefore" : "setEndAfter"](d);
            b.collapse(e)
        }
        b.insertNode(b.createContextualFragment(c))
    }
    return d
};
baidu.insertHTML = baidu.dom.insertHTML;
baidu.ui.Base.setParent = function(b) {
    var c = this,
    a = c._parent;
    a && a.dispatchEvent("removechild");
    if (b.dispatchEvent("appendchild", {
        child: c
    })) {
        c._parent = b
    }
};
baidu.ui.Base.getParent = function() {
    return this._parent || null
}; (function() {
    var a = new RegExp("(^[\\s\\t\\xa0\\u3000]+)|([\\u3000\\xa0\\s\\t]+\x24)", "g");
    baidu.string.trim = function(b) {
        return String(b).replace(a, "")
    }
})();
baidu.trim = baidu.string.trim;
baidu.dom.removeClass = function(f, g) {
    f = baidu.dom.g(f);
    var d = f.className.split(/\s+/),
    h = g.split(/\s+/),
    b,
    a = h.length,
    c,
    e = 0;
    for (; e < a; ++e) {
        for (c = 0, b = d.length; c < b; ++c) {
            if (d[c] == h[e]) {
                d.splice(c, 1);
                break
            }
        }
    }
    f.className = d.join(" ");
    return f
};
baidu.removeClass = baidu.dom.removeClass;
baidu.dom.addClass = function(f, g) {
    f = baidu.dom.g(f);
    var b = g.split(/\s+/),
    a = f.className,
    e = " " + a + " ",
    d = 0,
    c = b.length;
    for (; d < c; d++) {
        if (e.indexOf(" " + b[d] + " ") < 0) {
            a += (a ? " " : "") + b[d]
        }
    }
    f.className = a;
    return f
};
baidu.addClass = baidu.dom.addClass;
baidu.browser.ie = baidu.ie = /msie (\d+\.\d+)/i.test(navigator.userAgent) ? (document.documentMode || +RegExp["\x241"]) : undefined;
baidu.dom.remove = function(a) {
    a = baidu.dom._g(a);
    var b = a.parentNode;
    b && b.removeChild(a)
};
baidu.ui.behavior = baidu.ui.behavior || {};
baidu.dom.hasClass = function(c, d) {
    c = baidu.dom.g(c);
    if (!c || !c.className) {
        return false
    }
    var b = baidu.string.trim(d).split(/\s+/),
    a = b.length;
    d = c.className.split(/\s+/).join(" ");
    while (a--) {
        if (!(new RegExp("(^| )" + b[a] + "( |\x24)")).test(d)) {
            return false
        }
    }
    return true
};
baidu.event.getTarget = function(a) {
    return a.target || a.srcElement
};
baidu.array = baidu.array || {};
baidu.each = baidu.array.forEach = baidu.array.each = function(g, e, b) {
    var d, f, c, a = g.length;
    if ("function" == typeof e) {
        for (c = 0; c < a; c++) {
            f = g[c];
            d = e.call(b || g, f, c);
            if (d === false) {
                break
            }
        }
    }
    return g
};
baidu.object.each = function(e, c) {
    var b, a, d;
    if ("function" == typeof c) {
        for (a in e) {
            if (e.hasOwnProperty(a)) {
                d = e[a];
                b = c.call(e, d, a);
                if (b === false) {
                    break
                }
            }
        }
    }
    return e
};
baidu.fn = baidu.fn || {};
baidu.fn.bind = function(b, a) {
    var c = arguments.length > 2 ? [].slice.call(arguments, 2) : null;
    return function() {
        var e = baidu.lang.isString(b) ? a[b] : b,
        d = (c) ? c.concat([].slice.call(arguments, 0)) : arguments;
        return e.apply(a || e, d)
    }
};
baidu.lang.Class.prototype.addEventListeners = function(c, d) {
    if (typeof d == "undefined") {
        for (var b in c) {
            this.addEventListener(b, c[b])
        }
    } else {
        c = c.split(",");
        var b = 0,
        a = c.length,
        e;
        for (; b < a; b++) {
            this.addEventListener(baidu.trim(c[b]), d)
        }
    }
}; (function() {
    var a = baidu.ui.behavior.statable = function() {
        var b = this;
        b.addEventListeners("ondisable,onenable",
        function(e, c) {
            var d, f;
            c = c || {};
            elementId = (c.element || b.getMain()).id;
            f = c.group;
            if (e.type == "ondisable" && !b.getState(elementId, f)["disabled"]) {
                b.removeState("press", elementId, f);
                b.removeState("hover", elementId, f);
                b.setState("disabled", elementId, f)
            } else {
                if (e.type == "onenable" && b.getState(elementId, f)["disabled"]) {
                    b.removeState("disabled", elementId, f)
                }
            }
        })
    };
    a._states = {};
    a._allStates = ["hover", "press", "disabled"];
    a._allEventsName = ["mouseover", "mouseout", "mousedown", "mouseup"];
    a._eventsHandler = {
        mouseover: function(d, c) {
            var b = this;
            if (!b.getState(d, c)["disabled"]) {
                b.setState("hover", d, c);
                return true
            }
        },
        mouseout: function(d, c) {
            var b = this;
            if (!b.getState(d, c)["disabled"]) {
                b.removeState("hover", d, c);
                b.removeState("press", d, c);
                return true
            }
        },
        mousedown: function(d, c) {
            var b = this;
            if (!b.getState(d, c)["disabled"]) {
                b.setState("press", d, c);
                return true
            }
        },
        mouseup: function(d, c) {
            var b = this;
            if (!b.getState(d, c)["disabled"]) {
                b.removeState("press", d, c);
                return true
            }
        }
    };
    a._getStateHandlerString = function(h, f) {
        var g = this,
        e = 0,
        b = g._allEventsName.length,
        c = [],
        d;
        if (typeof h == "undefined") {
            h = f = ""
        }
        for (; e < b; e++) {
            d = g._allEventsName[e];
            c[e] = "on" + d + '="' + g.getCallRef() + "._fireEvent('" + d + "', '" + h + "', '" + f + "', event)\""
        }
        return c.join(" ")
    };
    a._fireEvent = function(c, g, b, f) {
        var d = this,
        h = d.getId(g + b);
        if (d._eventsHandler[c].call(d, h, g)) {
            d.dispatchEvent(c, {
                element: h,
                group: g,
                key: b,
                DOMEvent: f
            })
        }
    };
    a.addState = function(e, b, c) {
        var d = this;
        d._allStates.push(e);
        if (b) {
            d._allEventsName.push(b);
            if (!c) {
                c = function() {
                    return true
                }
            }
            d._eventsHandler[b] = c
        }
    };
    a.getState = function(b, e) {
        var d = this,
        c;
        e = e ? e + "-" : "";
        b = b ? b : d.getId();
        c = d._states[e + b];
        return c ? c : {}
    };
    a.setState = function(e, b, f) {
        var d = this,
        g, c;
        f = f ? f + "-" : "";
        b = b ? b : d.getId();
        g = f + b;
        d._states[g] = d._states[g] || {};
        c = d._states[g][e];
        if (!c) {
            d._states[g][e] = 1;
            baidu.addClass(b, d.getClass(f + e))
        }
    };
    a.removeState = function(d, b, e) {
        var c = this,
        f;
        e = e ? e + "-" : "";
        b = b ? b : c.getId();
        f = e + b;
        if (c._states[f]) {
            c._states[f][d] = 0;
            baidu.removeClass(b, c.getClass(e + d))
        }
    }
})();
baidu.ui.Button = baidu.ui.createUI(new Function).extend({
    uiType: "button",
    tplBody: '<div id="#{id}" #{statable} class="#{class}">#{content}</div>',
    disabled: false,
    statable: true,
    _getString: function() {
        var a = this;
        return baidu.format(a.tplBody, {
            id: a.getId(),
            statable: a._getStateHandlerString(),
            "class": a.getClass(),
            content: a.content
        })
    },
    render: function(c) {
        var b = this,
        a;
        b.addState("click", "click",
        function(f, e) {
            var d = this;
            if (!d.getState(f, e)["disabled"]) {
                return true
            }
        });
        baidu.dom.insertHTML(b.renderMain(c), "beforeEnd", b._getString());
        a = baidu.g(c).lastChild;
        if (b.title) {
            a.title = b.title
        }
        b.disabled && b.setState("disabled");
        b.dispatchEvent("onload")
    },
    isDisabled: function() {
        var a = this,
        b = a.getId();
        return a.getState()["disabled"]
    },
    dispose: function() {
        var b = this,
        a = b.getBody();
        b.dispatchEvent("dispose");
        baidu.each(b._allEventsName,
        function(d, c) {
            a["on" + d] = null
        });
        baidu.dom.remove(a);
        b.dispatchEvent("ondispose");
        baidu.lang.Class.prototype.dispose.call(b)
    },
    disable: function() {
        var b = this,
        a = b.getBody();
        b.dispatchEvent("ondisable", {
            element: a
        })
    },
    enable: function() {
        var a = this;
        body = a.getBody();
        a.dispatchEvent("onenable", {
            element: body
        })
    },
    fire: function(a, c) {
        var b = this,
        a = a.toLowerCase();
        if (b.getState()["disabled"]) {
            return
        }
        b._fireEvent(a, null, null, c)
    },
    update: function(a) {
        var b = this;
        baidu.extend(b, a);
        a.content && (b.getBody().innerHTML = a.content);
        b.dispatchEvent("onupdate")
    }
});
baidu.dom.contains = function(a, b) {
    var c = baidu.dom._g;
    a = c(a);
    b = c(b);
    return a.contains ? a != b && a.contains(b) : !!(a.compareDocumentPosition(b) & 16)
};
baidu.ui.Button.register(function(a) {
    if (!a.capture) {
        return
    }
    a.addEventListener("load",
    function() {
        var b = a.getBody(),
        c = baidu.fn.bind(function(e) {
            var f = baidu.event.getTarget(e);
            if (f != b && !baidu.dom.contains(b, f) && a.getState()["press"]) {
                a.fire("mouseout", e)
            }
        }),
        d = function(e) {
            if (!a.getState()["press"]) {
                a.fire("mouseout", e)
            }
        };
        b.onmouseout = null;
        a.on(b, "mouseout", d);
        a.on(document, "mouseup", c)
    })
});
baidu.lang.isBoolean = function(a) {
    return typeof a === "boolean"
};
baidu.ui.Button.register(function(a) {
    if (!a.poll) {
        return
    }
    baidu.lang.isBoolean(a.poll) && (a.poll = {});
    a.addEventListener("mousedown",
    function(b) {
        var d = 0,
        c = a.poll.interval || 100,
        e = a.poll.time || 0; (function() {
            if (a.getState()["press"]) {
                d++ > e && a.onmousedown && a.onmousedown();
                a.poll.timeOut = setTimeout(arguments.callee, c)
            }
        })()
    });
    a.addEventListener("dispose",
    function() {
        if (a.poll.timeOut) {
            a.disable();
            window.clearTimeout(a.poll.timeOut)
        }
    })
});
baidu.page = baidu.page || {};
baidu.page.getScrollTop = function() {
    var a = document;
    return window.pageYOffset || a.documentElement.scrollTop || a.body.scrollTop
};
baidu.page.getScrollLeft = function() {
    var a = document;
    return window.pageXOffset || a.documentElement.scrollLeft || a.body.scrollLeft
}; (function() {
    baidu.page.getMousePosition = function() {
        return {
            x: baidu.page.getScrollLeft() + a.x,
            y: baidu.page.getScrollTop() + a.y
        }
    };
    var a = {
        x: 0,
        y: 0
    };
    baidu.event.on(document, "onmousemove",
    function(b) {
        b = window.event || b;
        a.x = b.clientX;
        a.y = b.clientY
    })
})();
baidu.dom.getDocument = function(a) {
    a = baidu.dom.g(a);
    return a.nodeType == 9 ? a : a.ownerDocument || a.document
};
baidu.dom.getComputedStyle = function(b, a) {
    b = baidu.dom._g(b);
    var d = baidu.dom.getDocument(b),
    c;
    if (d.defaultView && d.defaultView.getComputedStyle) {
        c = d.defaultView.getComputedStyle(b, null);
        if (c) {
            return c[a] || c.getPropertyValue(a)
        }
    }
    return ""
};
baidu.dom._styleFixer = baidu.dom._styleFixer || {};
baidu.dom._styleFilter = baidu.dom._styleFilter || [];
baidu.dom._styleFilter.filter = function(b, e, f) {
    for (var a = 0,
    d = baidu.dom._styleFilter,
    c; c = d[a]; a++) {
        if (c = c[f]) {
            e = c(b, e)
        }
    }
    return e
};
baidu.string.toCamelCase = function(a) {
    if (a.indexOf("-") < 0 && a.indexOf("_") < 0) {
        return a
    }
    return a.replace(/[-_][^-_]/g,
    function(b) {
        return b.charAt(1).toUpperCase()
    })
};
baidu.dom.getStyle = function(c, b) {
    var e = baidu.dom;
    c = e.g(c);
    b = baidu.string.toCamelCase(b);
    var d = c.style[b] || (c.currentStyle ? c.currentStyle[b] : "") || e.getComputedStyle(c, b);
    if (!d) {
        var a = e._styleFixer[b];
        if (a) {
            d = a.get ? a.get(c) : baidu.dom.getStyle(c, a)
        }
    }
    if (a = e._styleFilter) {
        d = a.filter(b, d, "get")
    }
    return d
};
baidu.getStyle = baidu.dom.getStyle;
baidu.browser.isWebkit = /webkit/i.test(navigator.userAgent);
baidu.browser.isGecko = /gecko/i.test(navigator.userAgent) && !/like gecko/i.test(navigator.userAgent);
baidu.browser.isStrict = document.compatMode == "CSS1Compat";
baidu.dom.getPosition = function(a) {
    a = baidu.dom.g(a);
    var j = baidu.dom.getDocument(a),
    d = baidu.browser,
    g = baidu.dom.getStyle,
    c = d.isGecko > 0 && j.getBoxObjectFor && g(a, "position") == "absolute" && (a.style.top === "" || a.style.left === ""),
    h = {
        left: 0,
        top: 0
    },
    f = (d.ie && !d.isStrict) ? j.body : j.documentElement,
    k,
    b;
    if (a == f) {
        return h
    }
    if (a.getBoundingClientRect) {
        b = a.getBoundingClientRect();
        h.left = Math.floor(b.left) + Math.max(j.documentElement.scrollLeft, j.body.scrollLeft);
        h.top = Math.floor(b.top) + Math.max(j.documentElement.scrollTop, j.body.scrollTop);
        h.left -= j.documentElement.clientLeft;
        h.top -= j.documentElement.clientTop;
        var i = j.body,
        l = parseInt(g(i, "borderLeftWidth")),
        e = parseInt(g(i, "borderTopWidth"));
        if (d.ie && !d.isStrict) {
            h.left -= isNaN(l) ? 2 : l;
            h.top -= isNaN(e) ? 2 : e
        }
    } else {
        k = a;
        do {
            h.left += k.offsetLeft;
            h.top += k.offsetTop;
            if (d.isWebkit > 0 && g(k, "position") == "fixed") {
                h.left += j.body.scrollLeft;
                h.top += j.body.scrollTop;
                break
            }
            k = k.offsetParent
        } while (k && k != a);
        if (d.opera > 0 || (d.isWebkit > 0 && g(a, "position") == "absolute")) {
            h.top -= j.body.offsetTop
        }
        k = a.offsetParent;
        while (k && k != j.body) {
            h.left -= k.scrollLeft;
            if (!d.opera || k.tagName != "TR") {
                h.top -= k.scrollTop
            }
            k = k.offsetParent
        }
    }
    return h
};
baidu.event.preventDefault = function(a) {
    if (a.preventDefault) {
        a.preventDefault()
    } else {
        a.returnValue = false
    }
};
baidu.dom.setStyle = function(c, b, d) {
    var e = baidu.dom,
    a;
    c = e.g(c);
    b = baidu.string.toCamelCase(b);
    if (a = e._styleFilter) {
        d = a.filter(b, d, "set")
    }
    a = e._styleFixer[b]; (a && a.set) ? a.set(c, d) : (c.style[a || b] = d);
    return c
};
baidu.setStyle = baidu.dom.setStyle; (function() {
    var p, h, d, c, k, b, o, n, r, e, a = baidu.lang.isFunction,
    i, m, f;
    baidu.dom.drag = function(t, s) {
        r = n = null;
        if (!(p = baidu.dom.g(t))) {
            return false
        }
        h = baidu.object.extend({
            autoStop: true,
            capture: true,
            interval: 16,
            handler: p
        },
        s);
        m = baidu.dom.getPosition(p.offsetParent);
        f = baidu.dom.getPosition(p);
        if (baidu.getStyle(p, "position") == "absolute") {
            k = f.top - (p.offsetParent == document.body ? 0 : m.top);
            b = f.left - (p.offsetParent == document.body ? 0 : m.left)
        } else {
            k = parseFloat(baidu.getStyle(p, "top")) || -parseFloat(baidu.getStyle(p, "bottom")) || 0;
            b = parseFloat(baidu.getStyle(p, "left")) || -parseFloat(baidu.getStyle(p, "right")) || 0
        }
        if (h.mouseEvent) {
            d = baidu.page.getScrollLeft() + h.mouseEvent.clientX;
            c = baidu.page.getScrollTop() + h.mouseEvent.clientY
        } else {
            var u = baidu.page.getMousePosition();
            d = u.x;
            c = u.y
        }
        h.autoStop && baidu.event.on(h.handler, "mouseup", l);
        h.autoStop && baidu.event.on(window, "mouseup", l);
        baidu.event.on(document, "selectstart", j);
        if (h.capture && h.handler.setCapture) {
            h.handler.setCapture()
        } else {
            if (h.capture && window.captureEvents) {
                window.captureEvents(Event.MOUSEMOVE | Event.MOUSEUP)
            }
        }
        o = document.body.style.MozUserSelect;
        document.body.style.MozUserSelect = "none";
        if (a(h.ondragstart)) {
            h.ondragstart(p, h)
        }
        i = setInterval(q, h.interval);
        return {
            stop: l,
            update: g
        }
    };
    function g(s) {
        baidu.extend(h, s)
    }
    function l() {
        clearInterval(i);
        e = false;
        if (h.capture && h.handler.releaseCapture) {
            h.handler.releaseCapture()
        } else {
            if (h.capture && window.releaseEvents) {
                window.releaseEvents(Event.MOUSEMOVE | Event.MOUSEUP)
            }
        }
        document.body.style.MozUserSelect = o;
        baidu.event.un(document, "selectstart", j);
        h.autoStop && baidu.event.un(h.handler, "mouseup", l);
        h.autoStop && baidu.event.un(window, "mouseup", l);
        if (a(h.ondragend)) {
            h.ondragend(p, h)
        }
    }
    function q(w) {
        var s = h.range,
        v = baidu.page.getMousePosition(),
        t = b + v.x - d,
        u = k + v.y - c;
        if (typeof s == "object" && s && s.length == 4) {
            t = Math.max(s[3], t);
            t = Math.min(s[1] - p.offsetWidth, t);
            u = Math.max(s[0], u);
            u = Math.min(s[2] - p.offsetHeight, u)
        }
        if (!e) {
            baidu.setStyle(p, "marginTop", 0);
            baidu.setStyle(p, "marginLeft", 0);
            e = true
        }
        p.style.top = u + "px";
        p.style.left = t + "px";
        if ((n !== t || r !== u) && (n !== null || r !== null)) {
            if (a(h.ondrag)) {
                h.ondrag(p, h)
            }
        }
        n = t;
        r = u
    }
    function j(s) {
        return baidu.event.preventDefault(s, false)
    }
})();
baidu.dom.draggable = function(b, k) {
    k = baidu.object.extend({
        toggle: function() {
            return true
        }
    },
    k || {});
    k.autoStop = true;
    b = baidu.dom.g(b);
    k.handler = k.handler || b;
    var a, h = ["ondragstart", "ondrag", "ondragend"],
    c = h.length - 1,
    d,
    j,
    f = {
        dispose: function() {
            j && j.stop();
            baidu.event.un(k.handler, "onmousedown", g);
            baidu.lang.Class.prototype.dispose.call(f)
        }
    },
    e = this;
    if (a = baidu.dom.ddManager) {
        for (; c >= 0; c--) {
            d = h[c];
            k[d] = (function(i) {
                var l = k[i];
                return function() {
                    baidu.lang.isFunction(l) && l.apply(e, arguments);
                    a.dispatchEvent(i, {
                        DOM: b
                    })
                }
            })(d)
        }
    }
    if (b) {
        function g(l) {
            var i = k.mouseEvent = window.event || l;
            if (i.button > 1 || (baidu.lang.isFunction(k.toggle) && !k.toggle())) {
                return
            }
            if (baidu.dom.getStyle(b, "position") == "static") {
                baidu.dom.setStyle(b, "position", "relative")
            }
            if (baidu.lang.isFunction(k.onbeforedragstart)) {
                k.onbeforedragstart(b)
            }
            j = baidu.dom.drag(b, k);
            f.stop = j.stop;
            f.update = j.update;
            baidu.event.preventDefault(i)
        }
        baidu.event.on(k.handler, "onmousedown", g)
    }
    return {
        cancel: function() {
            f.dispose()
        }
    }
};
baidu.ui.Slider = baidu.ui.createUI(function(a) {
    var b = this;
    b.range = b.range || [b.min, b.max]
}).extend({
    layout: "horizontal",
    uiType: "slider",
    tplBody: '<div id="#{id}" class="#{class}" onmousedown="#{mousedown}" style="position:relative;">#{thumb}</div>',
    tplThumb: '<div id="#{thumbId}" class="#{thumbClass}" style="position:absolute;"></div>',
    value: 0,
    min: 0,
    max: 100,
    disabled: false,
    _dragOpt: {},
    _axis: {
        horizontal: {
            mousePos: "x",
            pos: "left",
            size: "width",
            clientSize: "clientWidth",
            offsetSize: "offsetWidth"
        },
        vertical: {
            mousePos: "y",
            pos: "top",
            size: "height",
            clientSize: "clientHeight",
            offsetSize: "offsetHeight"
        }
    },
    getString: function() {
        var a = this;
        return baidu.format(a.tplBody, {
            id: a.getId(),
            "class": a.getClass(),
            mousedown: a.getCallRef() + "._mouseDown(event)",
            thumb: baidu.format(a.tplThumb, {
                thumbId: a.getId("thumb"),
                thumbClass: a.getClass("thumb")
            })
        })
    },
    _mouseDown: function(h) {
        var f = this,
        d = f._axis[f.layout],
        a = baidu.page.getMousePosition(),
        c = baidu.dom.getPosition(f.getBody()),
        b = f.getThumb(),
        g = baidu.event.getTarget(h);
        if (g == b || baidu.dom.contains(b, g) || f.disabled) {
            return
        }
        f._calcValue(a[d.mousePos] - c[d.pos] - b[d.offsetSize] / 2);
        f.update();
        f.dispatchEvent("slideclick")
    },
    render: function(b) {
        var a = this;
        if (!b) {
            return
        }
        baidu.dom.insertHTML(a.renderMain(b), "beforeEnd", a.getString());
        a._createThumb();
        a.update();
        a.dispatchEvent("onload")
    },
    _createThumb: function() {
        var b = this,
        a;
        b._dragOpt = {
            ondragend: function() {
                b.dispatchEvent("slidestop")
            },
            ondragstart: function() {
                b.dispatchEvent("slidestart")
            },
            ondrag: function() {
                var d = b._axis[b.layout],
                c = b.getThumb().style[d.pos];
                b._calcValue(parseInt(c));
                b.dispatchEvent("slide")
            },
            range: [0, 0, 0, 0]
        };
        b._updateDragRange();
        a = baidu.dom.draggable(b.getThumb(), b._dragOpt);
        b.addEventListener("dispose",
        function() {
            a.cancel()
        })
    },
    _updateDragRange: function(f) {
        var e = this,
        d = e._axis[e.layout],
        b = f || e.range,
        c = e._dragOpt.range,
        a = e.getThumb();
        b = [Math.max(Math.min(b[0], e.max), e.min), Math.max(Math.min(b[1], e.max), e.min)];
        if (e.layout.toLowerCase() == "horizontal") {
            c[1] = e._parseValue(b[1], "fix") + a[d.offsetSize];
            c[3] = e._parseValue(b[0], "fix");
            c[2] = a.clientHeight
        } else {
            c[0] = e._parseValue(b[0], "fix");
            c[2] = e._parseValue(b[1], "fix") + a[d.offsetSize];
            c[1] = a.clientWidth
        }
    },
    update: function(b) {
        var d = this,
        c = d._axis[d.layout],
        a = d.getBody();
        b = b || {};
        baidu.object.extend(d, b);
        d._updateDragRange();
        d._adjustValue();
        if (d.dispatchEvent("beforesliderto", {
            drop: b.drop
        })) {
            d.getThumb().style[c.pos] = d._parseValue(d.value, "pix") + "px";
            d.dispatchEvent("update")
        }
    },
    _adjustValue: function() {
        var b = this,
        a = b.range;
        b.value = Math.max(Math.min(b.value, a[1]), a[0])
    },
    _calcValue: function(b) {
        var a = this;
        a.value = a._parseValue(b, "value");
        a._adjustValue()
    },
    _parseValue: function(d, b) {
        var c = this,
        a = c._axis[c.layout];
        len = c.getBody()[a.clientSize] - c.getThumb()[a.offsetSize];
        if (b == "value") {
            d = (c.max - c.min) / len * d + c.min
        } else {
            d = Math.round(len / (c.max - c.min) * (d - c.min))
        }
        return d
    },
    getValue: function() {
        return this.value
    },
    getTarget: function() {
        return baidu.g(this.targetId)
    },
    getThumb: function() {
        return baidu.g(this.getId("thumb"))
    },
    disable: function() {
        var a = this;
        a.disabled = true;
        a._updateDragRange([a.value, a.value])
    },
    enable: function() {
        var a = this;
        a.disabled = false;
        a._updateDragRange(a.range)
    },
    dispose: function() {
        var a = this;
        a.dispatchEvent("dispose");
        baidu.dom.remove(a.getId());
        a.dispatchEvent("ondispose");
        baidu.lang.Class.prototype.dispose.call(a)
    }
});
baidu.dom.hide = function(a) {
    a = baidu.dom.g(a);
    a.style.display = "none";
    return a
};
baidu.hide = baidu.dom.hide;
baidu.dom.show = function(a) {
    a = baidu.dom.g(a);
    a.style.display = "";
    return a
};
baidu.show = baidu.dom.show;
baidu.ui.ScrollBar = baidu.ui.createUI(function(a) {
    var b = this;
    b._scrollBarSize = {
        width: 0,
        height: 0
    }
}).extend({
    uiType: "scrollbar",
    tplDOM: '<div id="#{id}" class="#{class}"></div>',
    tplThumb: '<div class="#{prev}"></div><div class="#{track}"></div><div class="#{next}"></div>',
    value: 0,
    dimension: 10,
    orientation: "vertical",
    step: 5,
    _axis: {
        horizontal: {
            size: "width",
            unSize: "height",
            offsetSize: "offsetWidth",
            unOffsetSize: "offsetHeight",
            clientSize: "clientWidth",
            scrollPos: "scrollLeft",
            scrollSize: "scrollWidth"
        },
        vertical: {
            size: "height",
            unSize: "width",
            offsetSize: "offsetHeight",
            unOffsetSize: "offsetWidth",
            clientSize: "clientHeight",
            scrollPos: "scrollTop",
            scrollSize: "scrollHeight"
        }
    },
    getThumbString: function() {
        var a = this;
        return baidu.string.format(a.tplThumb, {
            prev: a.getClass("thumb-prev"),
            track: a.getClass("thumb-track"),
            next: a.getClass("thumb-next")
        })
    },
    render: function(b) {
        var a = this;
        if (!b || a.getMain()) {
            return
        }
        baidu.dom.insertHTML(a.renderMain(b), "beforeEnd", baidu.string.format(a.tplDOM, {
            id: a.getId(),
            "class": a.getClass()
        }));
        a._renderUI();
        a.dispatchEvent("load")
    },
    _renderUI: function() {
        var h = this,
        e = h._axis[h.orientation],
        a = h.getBody(),
        g,
        f,
        d;
        function b(i) {
            return {
                classPrefix: h.classPrefix + "-" + i,
                skin: h.skin ? h.skin + "-" + i : "",
                poll: {
                    time: 4
                },
                onmousedown: function() {
                    h._basicScroll(i)
                },
                element: a,
                autoRender: true
            }
        }
        g = h._prev = new baidu.ui.Button(b("prev"));
        baidu.dom.insertHTML(a, "beforeEnd", baidu.string.format(h.tplDOM, {
            id: h.getId("track"),
            "class": h.getClass("track")
        }));
        d = h._next = new baidu.ui.Button(b("next"));
        function c(i) {
            h.dispatchEvent("scroll", {
                value: Math.round(i.target.getValue())
            })
        }
        f = h._slider = new baidu.ui.Slider({
            classPrefix: h.classPrefix + "-slider",
            skin: h.skin ? h.skin + "-slider" : "",
            layout: h.orientation,
            onslide: c,
            onslideclick: c,
            element: baidu.dom.g(h.getId("track")),
            autoRender: true
        });
        h._scrollBarSize[e.unSize] = d.getBody()[e.unOffsetSize];
        h._thumbButton = new baidu.ui.Button({
            classPrefix: h.classPrefix + "-thumb-btn",
            skin: h.skin ? h.skin + "-thumb-btn" : "",
            content: h.getThumbString(),
            capture: true,
            element: f.getThumb(),
            autoRender: true
        });
        h.flushUI(h.value, h.dimension);
        h._registMouseWheelEvt(h.getMain())
    },
    flushUI: function(i, e) {
        var h = this,
        d = h._axis[h.orientation],
        g = h._prev.getBody()[d.offsetSize] + h._next.getBody()[d.offsetSize],
        f = h.getBody(),
        b = h._slider,
        a = b.getThumb(),
        c;
        baidu.dom.hide(f);
        c = h.getMain()[d.clientSize];
        h._scrollBarSize[d.size] = (c <= 0) ? g : c;
        b.getMain().style[d.size] = (c <= 0 ? 0 : c - g) + "px";
        a.style[d.size] = Math.max(Math.min(e, 100), 0) + "%";
        baidu.dom.show(f);
        h._scrollTo(i)
    },
    _scrollTo: function(a) {
        this._slider.update({
            value: a
        })
    },
    scrollTo: function(b) {
        var a = this;
        a._scrollTo(b);
        a.dispatchEvent("scroll", {
            value: b
        })
    },
    _basicScroll: function(b) {
        var a = this;
        a.scrollTo(Math.round(a._slider.getValue()) + (b == "prev" ? -a.step : a.step))
    },
    _onMouseWheelHandler: function(a) {
        var c = this,
        d = c.target,
        a = a || window.event,
        b = a.detail || -a.wheelDelta;
        baidu.event.preventDefault(a);
        c._basicScroll(b > 0 ? "next" : "prev")
    },
    _registMouseWheelEvt: function(c) {
        var b = this,
        d = function() {
            var e = navigator.userAgent.toLowerCase(),
            f = /(webkit)/.exec(e) || /(opera)/.exec(e) || /(msie)/.exec(e) || e.indexOf("compatible") < 0 && /(mozilla)/.exec(e) || [];
            return f[1] == "mozilla" ? "DOMMouseScroll" : "mousewheel"
        },
        a = b._mouseWheelEvent = {
            target: c,
            evtName: d(),
            handler: baidu.fn.bind("_onMouseWheelHandler", b)
        };
        baidu.event.on(a.target, a.evtName, a.handler)
    },
    _cancelMouseWheelEvt: function() {
        var a = this._mouseWheelEvent;
        if (!a) {
            return
        }
        baidu.event.un(a.target, a.evtName, a.handler);
        this._mouseWheelEvent = null
    },
    setVisible: function(a) {
        this.getMain().style.display = a ? "" : "none"
    },
    isVisible: function() {
        return this.getMain().style.display != "none"
    },
    getSize: function() {
        return this._scrollBarSize
    },
    update: function(a) {
        var b = this;
        b.dispatchEvent("beforeupdate");
        baidu.object.extend(b, a);
        b.flushUI(b.value, b.dimension);
        b.dispatchEvent("update")
    },
    dispose: function() {
        var a = this;
        a.dispatchEvent("dispose");
        a._cancelMouseWheelEvt();
        a._prev.dispose();
        a._thumbButton.dispose();
        a._slider.dispose();
        a._next.dispose();
        baidu.dom.remove(a.getMain());
        baidu.lang.Class.prototype.dispose.call(a)
    }
});
baidu.ui.ScrollBar.register(function(a) {
    if (!a.container) {
        return
    }
    a.addEventListeners({
        load: function() {
            a.update();
            if (a.orientation == "vertical") {
                a._registMouseWheelEvt(a.getContainer())
            }
        },
        beforeupdate: function() {
            var b = this;
            axis = b._axis[b.orientation],
            container = b.getContainer();
            if (!container) {
                return
            }
            b.dimension = Math.round(container[axis.clientSize] / container[axis.scrollSize] * 100);
            b.value = container[axis.scrollSize] - container[axis.clientSize];
            b.value > 0 && (b.value = Math.round(container[axis.scrollPos] / (container[axis.scrollSize] - container[axis.clientSize]) * 100))
        },
        scroll: function(c) {
            var b = a.getContainer(),
            d = a._axis[a.orientation];
            b[d.scrollPos] = c.value / 100 * (b[d.scrollSize] - b[d.clientSize])
        }
    })
});
baidu.object.extend(baidu.ui.ScrollBar.prototype, {
    getContainer: function() {
        return baidu.dom.g(this.container)
    }
});
baidu.dom._styleFixer["float"] = baidu.browser.ie ? "styleFloat" : "cssFloat";
baidu.ui.ScrollPanel = baidu.ui.createUI(function(a) { }).extend({
    uiType: "scrollpanel",
    tplDOM: '<div id="#{id}" class="#{class}">#{body}</div>',
    overflow: "auto",
    _scrollBarSize: 0,
    _yVisible: false,
    _xVisible: false,
    _axis: {
        y: {
            size: "height",
            unSize: "width",
            unScrollSize: "scrollWidth",
            unClientSize: "clientWidth",
            offsetSize: "offsetHeight",
            unOffsetSize: "offsetWidth"
        },
        x: {
            size: "width",
            unSize: "height",
            unScrollSize: "scrollHeight",
            unClientSize: "clientHeight",
            offsetSize: "offsetWidth",
            unOffsetSize: "offsetHeight"
        }
    },
    getString: function() {
        var a = this,
        b = baidu.string.format(a.tplDOM, {
            id: a.getId("panel"),
            "class": a.getClass("panel")
        });
        b = baidu.string.format(a.tplDOM, {
            id: a.getId(),
            "class": a.getClass(),
            body: b
        });
        return baidu.string.format(a.tplDOM, {
            id: a.getId("main"),
            "class": a.getClass("main"),
            body: b
        })
    },
    render: function(b) {
        var a = this;
        a.target = b;
        if (!b || a.getMain()) {
            return
        }
        baidu.dom.insertHTML(a.getTarget(), "afterEnd", a.getString());
        a.renderMain(a.getId("main"));
        a._renderUI();
        a._switchCssEvt(a.getMain());
        a.dispatchEvent("onload")
    },
    _switchCssEvt: function(d) {
        var c = this;
        var b = (T.browser.ie) ? "mouseenter" : "mouseover",
        a = (T.browser.ie) ? "mouseleave" : "mouseout";
        T.on(d, b,
        function() {
            c._focusScrollBar()
        });
        T.on(d, a,
        function() {
            c._blurScrollBar()
        })
    },
    _focusScrollBar: function() {
        var i = this;
        if (T.browser.ie == 6) {
            document.execCommand("BackgroundImageCache", false, true)
        }
        var h = i.getScrollBar("y").element.children[0];
        T.dom.setStyle(h, "background-position", "-3px center");
        var g = i.getScrollBar("y")._thumbButton.getBody();
        var j = g.children[0];
        var e = g.children[2];
        T.dom.setStyle(g, "background-position", "-24px center");
        T.dom.setStyle(j, "background-position", "-36px -11px");
        T.dom.setStyle(e, "background-position", "-36px -15px")
    },
    _blurScrollBar: function() {
        var i = this;
        var h = i.getScrollBar("y").element.children[0];
        T.dom.setStyle(h, "background-position", "3px 0");
        var g = i.getScrollBar("y")._thumbButton.getBody();
        var j = g.children[0];
        var e = g.children[2];
        T.dom.setStyle(g, "background-position", "-12px center");
        T.dom.setStyle(j, "background-position", "-36px 0");
        T.dom.setStyle(e, "background-position", "-36px -4px")
    },
    _renderUI: function() {
        var c = this,
        a = c.getMain(),
        b = c.getPanel(),
        f = c.getTarget(),
        e = c.skin || "";
        a.style.width = f.offsetWidth + "px";
        a.style.height = f.offsetHeight + "px";
        b.appendChild(f);
        function d(k) {
            var h = c.getId("overflow-" + k),
            i = c._axis[k],
            g = c.getPanel(),
            j;
            baidu.dom.insertHTML(g, (k == "y" ? "afterEnd" : "beforeEnd"), baidu.string.format(c.tplDOM, {
                id: h,
                "class": c.getClass("overflow-" + k)
            }));
            h = baidu.dom.g(h);
            if ("y" == k) {
                baidu.dom.setStyle(g, "float", "left");
                baidu.dom.setStyle(h, "float", "left")
            }
            c["_" + k + "Visible"] = true;
            j = c["_" + k + "Scrollbar"] = new baidu.ui.ScrollBar({
                skin: e + "scrollbar-" + k,
                orientation: k == "y" ? "vertical" : "horizontal",
                container: c.container,
                element: h,
                autoRender: true
            });
            h.style[i.unSize] = j.getSize()[i.unSize] + "px";
            c._scrollBarSize = j.getSize()[i.unSize];
            j.setVisible(false)
        }
        if (c.overflow == "overflow-y" || c.overflow == "auto") {
            d("y")
        }
        if (c.overflow == "overflow-x" || c.overflow == "auto") {
            d("x")
        }
        c._smartVisible()
    },
    _smartVisible: function() {
        var b = this,
        a = {
            yshow: false,
            xshow: false
        };
        if (!b.getContainer()) {
            return
        }
        function c(g) {
            var i = b._axis[g],
            j = b["_" + g + "Scrollbar"],
            f = b.getContainer(),
            h = {};
            if (!j || !j.isVisible()) {
                f.style[i.unSize] = f[i.unClientSize] - b._scrollBarSize + "px"
            }
            h[i.unSize] = f[i.unClientSize];
            h["scroll" + i.unSize] = f[i.unScrollSize];
            return h
        }
        function e(g, h) {
            var i = b._axis[g],
            f = b.getContainer();
            if (!b["_" + g + "Visible"] || !h[g + "show"] || !b["_" + g + "Scrollbar"]) {
                f.style[i.unSize] = f[i.unClientSize] + b._scrollBarSize + "px"
            }
        }
        function d(g, i) {
            var j = b._axis[g],
            f = b.getContainer(),
            k = b["_" + g + "Scrollbar"],
            h = i[g + "show"];
            if (k) {
                k.getMain().style[j.size] = f[j.offsetSize] + "px";
                k.setVisible(b["_" + g + "Visible"] ? h : false);
                k.update()
            }
        }
        baidu.object.extend(a, c("y"));
        baidu.object.extend(a, c("x"));
        if (a.scrollwidth <= a.width + b._scrollBarSize && a.scrollheight <= a.height + b._scrollBarSize) {
            a.yshow = a.xshow = false
        } else {
            if (a.scrollwidth <= a.width && a.scrollheight > a.height + b._scrollBarSize) {
                a.yshow = true;
                a.xshow = false
            } else {
                if (a.scrollwidth > a.width + b._scrollBarSize && a.scrollheight <= a.height) {
                    a.yshow = false;
                    a.xshow = true
                } else {
                    a.yshow = a.xshow = true
                }
            }
        }
        e("y", a);
        e("x", a);
        d("y", a);
        d("x", a)
    },
    setVisible: function(b, c) {
        var a = this;
        if (c) {
            a["_" + c + "Visible"] = b
        } else {
            a._yVisible = a._xVisible = b
        }
        a._smartVisible()
    },
    isVisible: function(b) {
        var a = this;
        return a["_" + b + "Visible"]
    },
    getScrollBar: function(c) {
        var b = this,
        a = c ? b["_" + c + "Scrollbar"] : null;
        if (!a) {
            a = (b._yScrollbar && b._xScrollbar) ? [b._yScrollbar, b._xScrollbar] : (b._yScrollbar || b._xScrollbar)
        }
        return a
    },
    update: function(a) {
        var b = this;
        baidu.object.extend(b, a);
        b._smartVisible()
    },
    getPanel: function() {
        return baidu.dom.g(this.getId("panel"))
    },
    getTarget: function() {
        return baidu.dom.g(this.target)
    },
    getContainer: function() {
        return baidu.dom.g(this.container)
    },
    dispose: function() {
        var b = this,
        a = b._yScrollbar,
        c = b._xScrollbar;
        b.dispatchEvent("dispose");
        b.setVisible(false);
        b.getMain().parentNode.insertBefore(b.getTarget(), b.getMain());
        if (a) {
            a.dispose()
        }
        if (c) {
            c.dispose()
        }
        baidu.dom.remove(b.getMain());
        baidu.lang.Class.prototype.dispose.call(b)
    }
});
baidu.lang.isNumber = function(a) {
    return "[object Number]" == Object.prototype.toString.call(a) && isFinite(a)
};
baidu.ui.ScrollPanel.register(function(a) {
    if (!a.adaptive) {
        return
    }
    a.addEventListener("onload",
    function() {
        var c = 20,
        b = a.getContainer(),
        d = {
            w: b.clientWidth,
            h: b.clientHeight
        },
        e = setInterval(function() {
            var f = a.getContainer(),
            i = d,
            h;
            if (i.w == f.clientWidth && i.h == f.clientHeight) {
                return
            }
            h = d = {
                w: f.clientWidth,
                h: f.clientHeight
            };
            function g(j) {
                var l = a["_" + j + "Scrollbar"],
                k = a._axis[j],
                n = l ? l.isVisible() : false,
                m = a.getMain()[k.unClientSize] - a.getContainer()[k.unOffsetSize];
                return (n && m == a._scrollBarSize) || (!n && m == 0)
            }
            if (g("y") && g("x")) {
                return
            }
            a.flushBounds()
        },
        c);
        a.addEventListener("dispose",
        function() {
            clearInterval(e)
        })
    })
});
baidu.ui.ScrollPanel.extend({
    adaptive: true,
    flushBounds: function(d) {
        var c = this,
        a = c.getMain(),
        b = c.getContainer(),
        e = {
            y: c._yVisible,
            x: c._xVisible
        },
        f = {
            w: d && baidu.lang.isNumber(d.width) ? d.width : b.clientWidth,
            h: d && baidu.lang.isNumber(d.height) ? d.height : b.clientHeight
        };
        c.setVisible(false);
        b.style.width = f.w + "px";
        b.style.height = f.h + "px";
        a.style.width = b.offsetWidth + "px";
        a.style.height = b.offsetHeight + "px";
        c._yVisible = e.y;
        c._xVisible = e.x;
        c._smartVisible()
    }
});
T.undope = true;